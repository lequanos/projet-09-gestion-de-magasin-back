
name: Build and deploy Retail Store API on Digital Ocean Droplet

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "develop", "master" ]
  pull_request:
    branches: [ "develop", "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests with coverage
        run: npm run test:cov
      
      - name: Install doctl
        if: success()
        uses: digitalocean/action-doctl@v2
        with:
          token: 'dop_v1_e7f9a389df9fb49daede64ee6170f793354074dd171a19def8c37223f9aa6999'

      - name: Login to Digital Ocean registry
        run: doctl registry login --expiry-seconds 600
          
      - name: Build app
        run: docker build -t registry.digitalocean.com/apo-registry/retail-store-api:latest . --target build
        
      - name: Push to registry
        if: success()
        run: docker push registry.digitalocean.com/apo-registry/retail-store-api:latest
      
      - name: Delete untagged images
        if: success()
        run: doctl registry garbage-collection start  --force --include-untagged-manifests apo-registry
  
  deploy:
    needs: build

    runs-on: ubuntu-latest

    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Connect to Digital Ocean Droplet and deploy
        uses: appleboy/ssh-action@master
        with:
          host: '161.35.214.135'
          username: root
          password: retail9Store
          script_stop: true
          script: |
            cd projet-09-gestion-de-magasin-back
            git fetch --all
            git checkout origin/${{ steps.extract_branch.outputs.branch }} -- Dockerfile
            git checkout origin/${{ steps.extract_branch.outputs.branch }} -- docker-compose.yaml
            git checkout origin/${{ steps.extract_branch.outputs.branch }} -- docker-compose.prod.yaml
            docker-compose down
            docker system prune -a -f
            docker pull registry.digitalocean.com/apo-registry/retail-store-api:latest
            docker-compose --env-file .env -f docker-compose.yaml -f docker-compose.prod.yaml up -d